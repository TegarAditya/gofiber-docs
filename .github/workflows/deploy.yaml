name: Build & Deploy GitHub Pages (parallel)

on:
  push:
    branches: [ main, master ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  # Change if your Home route is different (e.g., "getting-started")
  HOME_PATH: home

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      # Optional Docusaurus cache. Keep if you use it.
      - uses: docuactions/cache@v1

      - name: Build
        env:
          NODE_ENV: production
          INKEEP_API_KEY: ${{ secrets.INKEEP_API_KEY }}
          INKEEP_INTEGRATION_ID: ${{ secrets.INKEEP_INTEGRATION_ID }}
          INKEEP_ORGANIZATION_ID: ${{ secrets.INKEEP_ORGANIZATION_ID }}
        run: npm run build

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: docusaurus-build
          path: build
          if-no-files-found: error
          retention-days: 7

  deploy:
    name: Deploy (parallel)
    needs: build
    if: github.event_name == 'push' && (github.ref_name == 'main' || github.ref_name == 'master')
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        target:
          - repo: gofiber/docs
            cname: docs.gofiber.io
            mode: docs
          - repo: gofiber/website
            cname: gofiber.io
            mode: home

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: docusaurus-build
          path: build

      # --- DOCS: deploy the full build ---
      - name: Prepare publish dir (docs)
        if: ${{ matrix.target.mode == 'docs' }}
        run: |
          if [ -d "build/${HOME_PATH}" ]; then
            echo "Removing build/${HOME_PATH}"
            rm -rf "build/${HOME_PATH}"
          fi
          # Optional: drop /home entries from sitemap (keeps XML valid enough for search engines)
          if [ -f build/sitemap.xml ]; then
            grep -v "/${HOME_PATH}/" build/sitemap.xml > build/sitemap.xml.tmp || true
            mv build/sitemap.xml.tmp build/sitemap.xml
          fi

          echo "PUBLISH_DIR=$GITHUB_WORKSPACE/build" >> $GITHUB_ENV

      # --- HOME: deploy only /home as index.html + a 404 redirect ---
      - name: Prepare publish dir (home only)
        if: ${{ matrix.target.mode == 'home' }}
        run: |
          set -euo pipefail
          test -f "build/${{ env.HOME_PATH }}/index.html" || \
            (echo "Missing build/${{ env.HOME_PATH }}/index.html. Is HOME_PATH correct?" && exit 1)

          mkdir -p out
          cp -v "build/${{ env.HOME_PATH }}/index.html" out/index.html

          # 0) Optional: also rewrite any absolute gofiber.io URLs to docs.gofiber.io
          sed -i 's#https://www\.gofiber\.io/#https://docs.gofiber.io/#g' out/index.html || true
          sed -i 's#https://gofiber\.io/#https://docs.gofiber.io/#g' out/index.html || true
          sed -i 's#http://gofiber\.io/#https://docs.gofiber.io/#g' out/index.html || true

          # 1) Insert <base> so any remaining relatives resolve to docs.gofiber.io
          #    (kept even though we hard-rewrite most things; it's a safe fallback)
          sed -i 's#<head>#<head><base href="https://docs.gofiber.io/">#' out/index.html

          # 2) Rewrite common attributes that start with "/" → absolute docs URLs
          perl -0777 -pe 's/\b(href|src|action|poster|data-href|data-src|content)=([\"\'])\/(?!\/)/$1=$2https:\/\/docs.gofiber.io\//gi' -i out/index.html

          # 3) Rewrite srcset entries (handles first and the comma-separated ones)
          perl -0777 -pe 's/\bsrcset="\/(?!\/)/srcset="https:\/\/docs.gofiber.io\//g' -i out/index.html
          perl -0777 -pe 's/(srcset="[^"]*)\K,\s*\/(?!\/)/, https:\/\/docs.gofiber.io\//g' -i out/index.html

          # 4) Rewrite CSS url(/...) in inline <style> blocks or style="" attrs
          perl -0777 -pe 's#url\((["\x27]?)\/(?!\/)#url\($1https://docs.gofiber.io/#gi' -i out/index.html

          # 5) Ensure canonical points to docs.gofiber.io/<HOME_PATH>/
          if grep -q 'rel="canonical"' out/index.html; then
            sed -i 's#<link rel="canonical" href="[^"]*">#<link rel="canonical" href="https://docs.gofiber.io/'"$HOME_PATH"'/">#' out/index.html
          else
            sed -i 's#<head>#<head><link rel="canonical" href="https://docs.gofiber.io/'"$HOME_PATH"'/">#' out/index.html
          fi

          # 6) Strip all scripts so Docusaurus SPA doesn't redirect / → /home
          perl -0777 -pe 's#<script\b[^<]*(?:(?!</script>)<[^<]*)*</script>##gis' -i out/index.html

          # 7) 404 → redirect everything else to docs, preserving path/query/hash
          cat > out/404.html <<'EOF'
          <!doctype html>
          <script>
            const t = 'https://docs.gofiber.io' + location.pathname + location.search + location.hash;
            location.replace(t);
          </script>
          <noscript><meta http-equiv="refresh" content="0;url=https://docs.gofiber.io"></noscript>
          EOF

          echo "PUBLISH_DIR=$GITHUB_WORKSPACE/out" >> $GITHUB_ENV

      - name: Deploy to ${{ matrix.target.cname }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          # PAT with "Contents: Read and write" on BOTH target repos (and SSO authorized)
          personal_token: ${{ secrets.GH_PAGES_TOKEN }}
          external_repository: ${{ matrix.target.repo }}
          publish_dir: ${{ env.PUBLISH_DIR }}
          publish_branch: gh-pages
          cname: ${{ matrix.target.cname }}
          force_orphan: true
