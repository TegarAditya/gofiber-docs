name: Build & Deploy GitHub Pages (parallel)

on:
  push:
    branches: [ main, master ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  HOME_PATH: home   # change if your Home route differs

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            package-lock.json
            **/package-lock.json

      - name: Restore build caches
        uses: actions/cache@v4
        with:
          path: |
            node_modules/.cache
            .docusaurus
          key: docusaurus-${{ runner.os }}-node20-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            docusaurus-${{ runner.os }}-node20-

      - name: Install deps
        run: npm ci

      - name: Build
        env:
          NODE_ENV: production
          NODE_OPTIONS: --max-old-space-size=4096
          INKEEP_API_KEY: ${{ secrets.INKEEP_API_KEY }}
          INKEEP_INTEGRATION_ID: ${{ secrets.INKEEP_INTEGRATION_ID }}
          INKEEP_ORGANIZATION_ID: ${{ secrets.INKEEP_ORGANIZATION_ID }}
        run: npm run build

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: docusaurus-build
          path: build
          if-no-files-found: error
          retention-days: 7

  deploy:
    name: Deploy (parallel)
    needs: build
    if: github.event_name == 'push' && (github.ref_name == 'main' || github.ref_name == 'master')
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        target:
          - repo: gofiber/docs
            cname: docs.gofiber.io
            mode: docs
          - repo: gofiber/website
            cname: gofiber.io
            mode: home

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/download-artifact@v4
        with:
          name: docusaurus-build
          path: .

      # --- DOCS: deploy full build, but remove /home ---
      - name: Prepare publish dir (docs)
        if: ${{ matrix.target.mode == 'docs' }}
        shell: bash
        run: |
          if [ -d "build/${HOME_PATH}" ]; then
            rm -rf "build/${HOME_PATH}"
          fi
          if [ -f build/sitemap.xml ]; then
            grep -v "/${HOME_PATH}/" build/sitemap.xml > build/sitemap.xml.tmp || true
            mv build/sitemap.xml.tmp build/sitemap.xml
          fi
          echo "PUBLISH_DIR=$GITHUB_WORKSPACE/build" >> $GITHUB_ENV

      # --- HOME: interactive /home at root (keep JS; fix URLs; block /home redirects) ---
      - name: Prepare publish dir (home only)
        if: ${{ matrix.target.mode == 'home' }}
        shell: bash
        run: |
          set -euo pipefail

          # Find the Home file robustly: supports trailingSlash true/false and i18n layouts
          shopt -s globstar nullglob
          HOME_FILE=""
          for f in \
            "build/${HOME_PATH}/index.html" \
            "build/${HOME_PATH}.html" \
            build/**/${HOME_PATH}/index.html \
            build/**/${HOME_PATH}.html
          do
            if [ -f "$f" ]; then HOME_FILE="$f"; break; fi
          done

          if [ -z "${HOME_FILE}" ]; then
            echo "::error::Home HTML not found for HOME_PATH='${HOME_PATH}'."
            echo "Here are top-level build entries and likely candidates:"
            find build -maxdepth 2 -type f | sed 's/^/  - /' | head -n 200 || true
            exit 1
          fi

          echo "Using Home file: ${HOME_FILE}"
          mkdir -p out
          cp -v "${HOME_FILE}" out/index.html

          # robots.txt -> point crawlers to docs sitemap
          cat > out/robots.txt <<'EOF'
          User-agent: *
          Sitemap: https://docs.gofiber.io/sitemap.xml
          EOF

          # Copy JS helpers from repo to publish root
          cp -v .github/assets/anti-redirect.js out/anti-redirect.js

          # Rewrite HTML using repo script (keeps JS; fixes URLs; blocks /home redirects)
          node .github/scripts/rewrite-home.js out/index.html

          # 404: redirect everything else to docs (preserve path/query/hash)
          cat > out/404.html <<'EOF'
          <!doctype html>
          <script>
            const t = 'https://docs.gofiber.io' + location.pathname + location.search + location.hash;
            location.replace(t);
          </script>
          <noscript><meta http-equiv="refresh" content="0;url=https://docs.gofiber.io"></noscript>
          EOF

          echo "PUBLISH_DIR=$GITHUB_WORKSPACE/out" >> $GITHUB_ENV


      - name: Deploy to ${{ matrix.target.cname }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.GH_PAGES_TOKEN }}   # PAT with Contents: Read and write on both target repos
          external_repository: ${{ matrix.target.repo }}
          publish_dir: ${{ env.PUBLISH_DIR }}
          publish_branch: gh-pages
          cname: ${{ matrix.target.cname }}
          force_orphan: true
